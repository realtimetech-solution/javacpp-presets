// Targeted by JavaCPP version 1.5.6-SNAPSHOT: DO NOT EDIT THIS FILE

package org.bytedeco.onnxruntime;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.javacpp.presets.javacpp.*;
import org.bytedeco.opencl.*;
import static org.bytedeco.opencl.global.OpenCL.*;
import org.bytedeco.dnnl.*;
import static org.bytedeco.dnnl.global.dnnl.*;

import static org.bytedeco.onnxruntime.global.onnxruntime.*;


/** <summary>
 *  Options for the ROCM provider that are passed to SessionOptionsAppendExecutionProvider_ROCM
 *  </summary> */
@Properties(inherit = org.bytedeco.onnxruntime.presets.onnxruntime.class)
public class OrtROCMProviderOptions extends Pointer {
    static { Loader.load(); }
    /** Default native constructor. */
    public OrtROCMProviderOptions() { super((Pointer)null); allocate(); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public OrtROCMProviderOptions(long size) { super((Pointer)null); allocateArray(size); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public OrtROCMProviderOptions(Pointer p) { super(p); }
    private native void allocate();
    private native void allocateArray(long size);
    @Override public OrtROCMProviderOptions position(long position) {
        return (OrtROCMProviderOptions)super.position(position);
    }
    @Override public OrtROCMProviderOptions getPointer(long i) {
        return new OrtROCMProviderOptions((Pointer)this).offsetAddress(i);
    }

  public native int device_id(); public native OrtROCMProviderOptions device_id(int setter);                      // hip device with id=0 as default device.
  public native int miopen_conv_exhaustive_search(); public native OrtROCMProviderOptions miopen_conv_exhaustive_search(int setter);  // miopen conv algo exhaustive search option
  public native @Cast("size_t") long gpu_mem_limit(); public native OrtROCMProviderOptions gpu_mem_limit(long setter);               // default hip memory limitation to maximum finite value of size_t.
  public native int arena_extend_strategy(); public native OrtROCMProviderOptions arena_extend_strategy(int setter);          // default area extend strategy to KNextPowerOfTwo.
}
